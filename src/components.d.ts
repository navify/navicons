/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Rindo compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLRindoElement, JSXBase } from "@rindo/core/internal";
export namespace Components {
    interface NavIcon {
        /**
          * The color to use for the background of the item.
         */
        "color"?: string;
        /**
          * Specifies whether the icon should horizontally flip when `dir` is `"rtl"`.
         */
        "flipRtl"?: boolean;
        /**
          * A combination of both `name` and `src`. If a `src` url is detected it will set the `src` property. Otherwise it assumes it's a built-in named SVG and set the `name` property.
         */
        "icon"?: any;
        /**
          * Specifies which icon to use on `ios` mode.
         */
        "ios"?: string;
        /**
          * If enabled, nav-icon will be loaded lazily when it's visible in the viewport. Default, `false`.
         */
        "lazy": boolean;
        /**
          * Specifies which icon to use on `md` mode.
         */
        "md"?: string;
        /**
          * The mode determines which platform styles to use.
         */
        "mode": string;
        /**
          * Specifies which icon to use from the built-in set of icons.
         */
        "name"?: string;
        /**
          * When set to `false`, SVG content that is HTTP fetched will not be checked if the response SVG content has any `<script>` elements, or any attributes that start with `on`, such as `onclick`.
          * @default true
         */
        "sanitize": boolean;
        /**
          * The size of the icon. Available options are: `"small"` and `"large"`.
         */
        "size"?: string;
        /**
          * Specifies the exact `src` of an SVG file to use.
         */
        "src"?: string;
    }
}
declare global {
    interface HTMLNavIconElement extends Components.NavIcon, HTMLRindoElement {
    }
    var HTMLNavIconElement: {
        prototype: HTMLNavIconElement;
        new (): HTMLNavIconElement;
    };
    interface HTMLElementTagNameMap {
        "nav-icon": HTMLNavIconElement;
    }
}
declare namespace LocalJSX {
    interface NavIcon {
        /**
          * The color to use for the background of the item.
         */
        "color"?: string;
        /**
          * Specifies whether the icon should horizontally flip when `dir` is `"rtl"`.
         */
        "flipRtl"?: boolean;
        /**
          * A combination of both `name` and `src`. If a `src` url is detected it will set the `src` property. Otherwise it assumes it's a built-in named SVG and set the `name` property.
         */
        "icon"?: any;
        /**
          * Specifies which icon to use on `ios` mode.
         */
        "ios"?: string;
        /**
          * If enabled, nav-icon will be loaded lazily when it's visible in the viewport. Default, `false`.
         */
        "lazy"?: boolean;
        /**
          * Specifies which icon to use on `md` mode.
         */
        "md"?: string;
        /**
          * The mode determines which platform styles to use.
         */
        "mode"?: string;
        /**
          * Specifies which icon to use from the built-in set of icons.
         */
        "name"?: string;
        /**
          * When set to `false`, SVG content that is HTTP fetched will not be checked if the response SVG content has any `<script>` elements, or any attributes that start with `on`, such as `onclick`.
          * @default true
         */
        "sanitize"?: boolean;
        /**
          * The size of the icon. Available options are: `"small"` and `"large"`.
         */
        "size"?: string;
        /**
          * Specifies the exact `src` of an SVG file to use.
         */
        "src"?: string;
    }
    interface IntrinsicElements {
        "nav-icon": NavIcon;
    }
}
export { LocalJSX as JSX };
declare module "@rindo/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "nav-icon": LocalJSX.NavIcon & JSXBase.HTMLAttributes<HTMLNavIconElement>;
        }
    }
}
